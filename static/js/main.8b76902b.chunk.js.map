{"version":3,"sources":["LoginPage/Login.module.css","Header/Header.module.css","Header/Header.js","hoc/withAuthRedirect.js","HomePage/HomePage.js","FormsControls/FormsControls.js","FormsControls/validators.js","api.js","LoginPage/auth-reducer.js","LoginPage/LoginPage.js","ProfilePage/ProfileContainerPage.js","NewsPage/NewsReducer.js","NewsPage/Post.js","NewsPage/NewsContainerPage.js","LoginPage/LogOut.js","App.js","serviceWorker.js","store.js","index.js","FormsControls/FormControls.module.css","NewsPage/News.module.css"],"names":["module","exports","connect","state","isAuth","auth","props","className","s","header","nav","item","to","activeClassName","activeLink","mapStateToProps","withAuthRedirect","Component","RedirectComponent","this","React","compose","Input","input","meta","hasError","touched","error","styles","formControl","required","value","api","login","username","password","Promise","res","setTimeout","messages","logout","initState","SuccessLogin","data","type","AuthReducer","action","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","name","component","logIn","dispatch","a","localStorage","setItem","JSON","stringify","formData","ProfileContainer","posts","pageSize","currentPage","NewsReducer","Post","post_info","title","body","NewsContainer","onScroll","e","scrollable","document","documentElement","scrollHeight","window","innerHeight","scrolled","scrollY","getPosts","onscroll","ev","Math","ceil","count","cureenPagedabl","addEventListener","bind","removeEventListener","style","wrapper","map","el","post","key","id","news","axios","then","LogOut","logOut","onClick","removeItem","App","getItem","parse","path","Home","Login","Boolean","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b76902b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Login_Wrapper__oLQO1\",\"login\":\"Login_login__9bPln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3F2Mb\",\"nav\":\"Header_nav__1-ish\",\"item\":\"Header_item__1dME0\",\"activeLink\":\"Header_activeLink__3Y670\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Header = (props) => {\r\n    return (<header className={s.header}>\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/ /\" activeClassName={s.activeLink}>Главная</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/posts\" activeClassName={s.activeLink}>Новости</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Профиль</NavLink>\r\n            </div>\r\n            {props.isAuth ?\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/logout\" activeClassName={s.activeLink}>LogOut</NavLink>\r\n                </div>\r\n                : null}\r\n        </nav>\r\n    </header>)\r\n}\r\n\r\nlet mapDispatchToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapDispatchToProps)(Header);","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectRedirectComponent\r\n}","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst Home = () =>{\r\n    return(\r\n        <div>\r\n            THIS IS HOME PAGE\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect)(Home)\r\n\r\n","import React from \"react\";\r\nimport styles from './FormControls.module.css'\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) =>{\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}","const api = {\r\n    login(username, password) {\r\n        if (username === 'Admin' && password === '123123') {\r\n            return new Promise((res) => {\r\n                setTimeout(() => {\r\n                    res({isAuth: true})\r\n                })\r\n            })\r\n        } else {\r\n            return new Promise((res) => {\r\n                setTimeout(() => {\r\n                    res({isAuth: false, messages: 'Имя пользователя или пароль введены не верно '})\r\n                }, 1000)\r\n            })\r\n        }\r\n    },\r\n    logout() {\r\n        return new Promise((res) => {\r\n            setTimeout(() => {\r\n                res({isAuth: false})\r\n            })\r\n        })\r\n    }\r\n};\r\nexport default api","import api from \"../api\";\r\n\r\nexport const SUCCESS_LOGIN = 'SUCCESS_LOGIN';\r\nexport const SUCCESS_ERROR = 'SUCCESS_ERROR';\r\n\r\nconst initState = {\r\n    error: null,\r\n    isAuth: false\r\n};\r\n\r\nconst AuthReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SUCCESS_LOGIN: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.data\r\n            }\r\n        }\r\n        case SUCCESS_ERROR:{\r\n            return {\r\n                ...state,\r\n                isAuth: action.data.isAuth,\r\n                error: action.data.messages\r\n            }\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\nexport const SuccessLogin = (data) => {\r\n    return {type: SUCCESS_LOGIN, data}\r\n};\r\nexport const SuccessError = (data) => {\r\n    return {type: SUCCESS_ERROR, data}\r\n};\r\n\r\nexport const logIn = (username, password) => async (dispatch) => {\r\ndebugger\r\n    const res = await api.login(username, password)\r\n        if (res.isAuth){\r\n            debugger\r\n            localStorage.setItem('name',JSON.stringify({isAuth:true}));\r\n            dispatch(SuccessLogin(res.isAuth))\r\n        }else {\r\n            dispatch(SuccessError(res))\r\n        }\r\n};\r\nexport const logOut = () => async (dispatch) => {\r\n    const res = await api.logout()\r\n    if (!res.isAuth){\r\n        localStorage.removeItem('name');\r\n        debugger\r\n        dispatch(SuccessLogin(res.isAuth))\r\n    }\r\n};\r\n\r\nexport default AuthReducer","import React from 'react'\r\nimport style from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../FormsControls/FormsControls\";\r\nimport {required} from \"../FormsControls/validators\";\r\nimport {logIn} from \"./auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder={'Login'} validate={[required]} name={'username'} component={Input}/></div>\r\n            <div><Field placeholder={'Password'} validate={[required]} name={'password'} type=\"password\"\r\n                        component={Input}/></div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.logIn(formData.username, formData.password)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login to ...</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n        { props.error ? <h2>{props.error}</h2>: null}\r\n    </div>\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    error: state.auth.error\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logIn})(Login)\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect)(ProfileContainer)\r\n","import * as axios from \"axios\";\r\n\r\nexport const SET_POSTS = 'SET_POSTS';\r\n\r\nconst initState = {\r\n    posts: [],\r\n    pageSize: 10,\r\n    currentPage: 1\r\n};\r\n\r\n\r\nconst NewsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_POSTS: {\r\n            return {\r\n                ...state,\r\n                posts:[...state.posts, ...action.posts]\r\n            }\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\nexport const setUsers = (posts) => {\r\n    return {type: SET_POSTS, posts}\r\n};\r\nexport const getPosts = (currentPage, pageSize) => (dispatch) => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/posts?_page=${currentPage}&_limit=${pageSize}`)\r\n        .then((res) => {\r\n            dispatch(setUsers(res.data));\r\n            // dispatch(setTotalUsersCount(res.totalCount));\r\n        })\r\n}\r\n\r\nexport default NewsReducer","import React from 'react'\r\n\r\n\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n        <div>\r\n            <span>{props.post_info.title}</span>\r\n            <span>{props.post_info.body}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport  default Post","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getPosts} from \"./NewsReducer\";\r\nimport Post from \"./Post\";\r\nimport style from './News.module.css'\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass NewsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPosts(this.props.currentPage, this.props.pageSize)\r\n        document.addEventListener('scroll', this.onScroll.bind(this))\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('scroll', this.onScroll)\r\n    }\r\n    onScroll = (e) => {\r\n        const scrollable = document.documentElement.scrollHeight - window.innerHeight\r\n        const scrolled = window.scrollY;\r\n        const currentPage = this.props.currentPage;\r\n        const pageSize = this.props.pageSize;\r\n        const getPosts = this.props.getPosts;\r\n        window.onscroll = function(ev) {\r\n            if (Math.ceil(scrolled) === scrollable){\r\n                function cureenPagedabl(currentPage) {\r\n                        return  currentPage + 1\r\n                }\r\n                let count = cureenPagedabl(currentPage);\r\n                getPosts(count,pageSize);\r\n            }\r\n        };\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.wrapper}>\r\n                {\r\n                    this.props.posts.map((el) => {\r\n                        return (\r\n                            <div className={style.post} key={el.id}>\r\n                                <Post post_info={el}/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.news.posts,\r\n        pageSize: state.news.pageSize,\r\n        currentPage: state.news.currentPage\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getPosts}),\r\n    withAuthRedirect)(NewsContainer)\r\n\r\n\r\n// export default connect(mapStateToProps,{getPosts})(AuthRedirectComponent)","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logOut} from \"./auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\n\r\nclass LogOut extends Component {\r\n    logOut() {\r\n        debugger\r\n        this.props.logOut()\r\n    }\r\n    render() {\r\n\r\n        return <div>\r\n            <button onClick={this.logOut.bind(this)}>\r\n                LogOut\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(null, {logOut}),\r\n    withAuthRedirect)(LogOut)\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Route} from \"react-router-dom\";\nimport Header from \"./Header/Header\";\nimport Home from \"./HomePage/HomePage\";\nimport Login from \"./LoginPage/LoginPage\";\nimport ProfileContainer from \"./ProfilePage/ProfileContainerPage\";\nimport NewsContainer from \"./NewsPage/NewsContainerPage\";\nimport {connect} from \"react-redux\";\nimport {SuccessLogin} from \"./LoginPage/auth-reducer\";\nimport LogOut from \"./LoginPage/LogOut\";\n\n\nclass App extends Component {\n    componentDidMount() {\n        if(localStorage.getItem('name')){\n            debugger\n            let login=  JSON.parse(localStorage.getItem('name'))\n            this.props.SuccessLogin(login.isAuth)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <div>\n                    <Route path=\"/ /\" component={Home}/>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/posts\" component={NewsContainer}/>\n                    <Route path=\"/profile\" component={ProfileContainer}/>\n                    <Route path=\"/logout\" component={LogOut}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {SuccessLogin,})(App) ;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport NewsReducer from \"./NewsPage/NewsReducer\";\r\nimport AuthReducer from \"./LoginPage/auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n        news: NewsReducer,\r\n        auth: AuthReducer,\r\n        form: formReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__ZTn4E\",\"error\":\"FormControls_error__3iA3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"News_wrapper__UkwSv\",\"post\":\"News_post__XyNfY\"};"],"sourceRoot":""}